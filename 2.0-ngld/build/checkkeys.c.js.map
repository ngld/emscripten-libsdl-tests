{"version":3,"file":"checkkeys.c.js","sources":["../SDL-2.0.0/checkkeys.c"],"names":[],"mappingsrCA;AACA;AAAA;AAAA;AA1HA;AACA;AAAA;;AAkIA;AAOA;AAGA;AAAA;AAAA;AAAA;AAnFA;AAUA;AAQA;AAcA;;AA+CA;;;;;;;;;AA3CA;;;;;;AAGA;AACA;AAAA;AAHA;;;;AAKA;AAAA;;;;;;;;;;;;;;;AAyCA;AAAA;AA7EA;AACA;;AAWA;AAGA;AAAA;AAAA;;AAVA;AAIA;AAAA;AACA;AAAA;AAAA;;AA/CA;AAAA;AACA;;;AAEA;AAAA;;;AAIA;AAAA;;;AAEA;AAAA;;;AAEA;AAAA;;;AAEA;AAAA;;;AAEA;AAAA;;;AAEA;AAAA;;;AAEA;AAAA;;;AAEA;AAAA;;;AAEA;AAAA;;;AAEA;AAAA;;;;;AAEA;AAAA;;;;AA8BA;AAAA;;AAEA;AAAA;;AAsEA;;;AAEA;;;;;;;;;;;AApJA;AAAA;AAAA;AACA;;;;;AAEA;AACA;;AACA;;;;AAEA","sourcesContent":["/*\n  Copyright (C) 1997-2013 Sam Lantinga <slouken@libsdl.org>\n\n  This software is provided 'as-is', without any express or implied\n  warranty.  In no event will the authors be held liable for any damages\n  arising from the use of this software.\n\n  Permission is granted to anyone to use this software for any purpose,\n  including commercial applications, and to alter it and redistribute it\n  freely.\n*/\n\n/* Simple program:  Loop, watching keystrokes\n   Note that you need to call SDL_PollEvent() or SDL_WaitEvent() to\n   pump the event loop and catch keystrokes.\n*/\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\n#include \"SDL.h\"\n\n/* Call this instead of exit(), so we can clean up SDL: atexit() is evil. */\nstatic void\nquit(int rc)\n{\n    SDL_Quit();\n    exit(rc);\n}\n\nstatic void\nprint_string(char **text, size_t *maxlen, const char *fmt, ...)\n{\n    int len;\n    va_list ap;\n\n    va_start(ap, fmt);\n    len = SDL_vsnprintf(*text, *maxlen, fmt, ap);\n    if (len > 0) {\n        *text += len;\n        if ( ((size_t) len) < *maxlen ) {\n            *maxlen -= (size_t) len;\n        } else {\n            *maxlen = 0;\n        }\n    }\n    va_end(ap);\n}\n\nstatic void\nprint_modifiers(char **text, size_t *maxlen)\n{\n    int mod;\n    print_string(text, maxlen, \" modifiers:\");\n    mod = SDL_GetModState();\n    if (!mod) {\n        print_string(text, maxlen, \" (none)\");\n        return;\n    }\n    if (mod & KMOD_LSHIFT)\n        print_string(text, maxlen, \" LSHIFT\");\n    if (mod & KMOD_RSHIFT)\n        print_string(text, maxlen, \" RSHIFT\");\n    if (mod & KMOD_LCTRL)\n        print_string(text, maxlen, \" LCTRL\");\n    if (mod & KMOD_RCTRL)\n        print_string(text, maxlen, \" RCTRL\");\n    if (mod & KMOD_LALT)\n        print_string(text, maxlen, \" LALT\");\n    if (mod & KMOD_RALT)\n        print_string(text, maxlen, \" RALT\");\n    if (mod & KMOD_LGUI)\n        print_string(text, maxlen, \" LGUI\");\n    if (mod & KMOD_RGUI)\n        print_string(text, maxlen, \" RGUI\");\n    if (mod & KMOD_NUM)\n        print_string(text, maxlen, \" NUM\");\n    if (mod & KMOD_CAPS)\n        print_string(text, maxlen, \" CAPS\");\n    if (mod & KMOD_MODE)\n        print_string(text, maxlen, \" MODE\");\n}\n\nstatic void\nPrintKey(SDL_Keysym * sym, SDL_bool pressed, SDL_bool repeat)\n{\n    char message[512];\n    char *spot;\n    size_t left;\n\n    spot = message;\n    left = sizeof(message);\n\n    /* Print the keycode, name and state */\n    if (sym->sym) {\n        print_string(&spot, &left,\n                \"Key %s:  scancode %d = %s, keycode 0x%08X = %s \",\n                pressed ? \"pressed \" : \"released\",\n                sym->scancode,\n                SDL_GetScancodeName(sym->scancode),\n                sym->sym, SDL_GetKeyName(sym->sym));\n    } else {\n        print_string(&spot, &left,\n                \"Unknown Key (scancode %d = %s) %s \",\n                sym->scancode,\n                SDL_GetScancodeName(sym->scancode),\n                pressed ? \"pressed \" : \"released\");\n    }\n    print_modifiers(&spot, &left);\n    if (repeat) {\n        print_string(&spot, &left, \" (repeat)\");\n    }\n    SDL_Log(\"%s\\n\", message);\n}\n\nstatic void\nPrintText(char *text)\n{\n    unsigned char *spot, expanded[1024];\n\n    expanded[0] = '\\0';\n    for ( spot = text; *spot; ++spot )\n    {\n        size_t length = SDL_strlen(expanded);\n        SDL_snprintf(expanded + length, sizeof(expanded) - length, \"\\\\x%.2x\", *spot);\n    }\n    SDL_Log(\"Text (%s): \\\"%s%s\\\"\\n\", expanded, *text == '\"' ? \"\\\\\" : \"\", text);\n}\n\nint\nmain(int argc, char *argv[])\n{\n    SDL_Window *window;\n    SDL_Event event;\n    int done;\n\n    /* Initialize SDL */\n    if (SDL_Init(SDL_INIT_VIDEO) < 0) {\n        fprintf(stderr, \"Couldn't initialize SDL: %s\\n\", SDL_GetError());\n        return (1);\n    }\n\n    /* Set 640x480 video mode */\n    window = SDL_CreateWindow(\"CheckKeys Test\",\n                              SDL_WINDOWPOS_CENTERED, SDL_WINDOWPOS_CENTERED,\n                              640, 480, 0);\n    if (!window) {\n        fprintf(stderr, \"Couldn't create 640x480 window: %s\\n\",\n                SDL_GetError());\n        quit(2);\n    }\n\n#if __IPHONEOS__\n    /* Creating the context creates the view, which we need to show keyboard */\n    SDL_GL_CreateContext(window);\n#endif\n\n    SDL_StartTextInput();\n\n    /* Watch keystrokes */\n    done = 0;\n    while (!done) {\n        /* Check for events */\n        SDL_WaitEvent(&event);\n        switch (event.type) {\n        case SDL_KEYDOWN:\n        case SDL_KEYUP:\n            PrintKey(&event.key.keysym, event.key.state, event.key.repeat);\n            break;\n        case SDL_TEXTINPUT:\n            PrintText(event.text.text);\n            break;\n        case SDL_MOUSEBUTTONDOWN:\n            /* Any button press quits the app... */\n        case SDL_QUIT:\n            done = 1;\n            break;\n        default:\n            break;\n        }\n    }\n\n    SDL_Quit();\n    return (0);\n}\n\n/* vi: set ts=4 sw=4 expandtab: */\n"]}