{"version":3,"file":"testtimer.c.js","sources":["../SDL-2.0.0/testtimer.c"],"names":[],"mappingsgDA;AAAA;AAAA;AAAA;;;AAqEA;;AA/DA;;;;;;AAGA;AAGA;AAGA;AACA;AAGA;AAGA;;AACA;AAAA;AAAA;AAAA;;AAMA;AACA;;AAEA;AAAA;AAAA;AAAA;;AACA;;AAEA;AAAA;AAAA;AAAA;;AACA;;AAEA;AAAA;AAAA;AAAA;;AAGA;AACA;AAEA;AACA;AAEA;AAEA;AACA;;;AAtEA;;;;AA6EA;;AAAA;AAAA;AAAA;;;;;AAGA;;;AAEA;;;AAGA;;;AAAA;;AAAA;AAAA;AAAA;AAEA;;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAlFA;AAAA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AARA;AACA","sourcesContent":["/*\n  Copyright (C) 1997-2013 Sam Lantinga <slouken@libsdl.org>\n\n  This software is provided 'as-is', without any express or implied\n  warranty.  In no event will the authors be held liable for any damages\n  arising from the use of this software.\n\n  Permission is granted to anyone to use this software for any purpose,\n  including commercial applications, and to alter it and redistribute it\n  freely.\n*/\n\n/* Test program to check the resolution of the SDL timer on the current\n   platform\n*/\n\n#include <stdlib.h>\n#include <stdio.h>\n\n#include \"SDL.h\"\n\n#define DEFAULT_RESOLUTION  1\n\nstatic int ticks = 0;\n\nstatic Uint32 SDLCALL\nticktock(Uint32 interval, void *param)\n{\n    ++ticks;\n    return (interval);\n}\n\nstatic Uint32 SDLCALL\ncallback(Uint32 interval, void *param)\n{\n    printf(\"Timer %d : param = %d\\n\", interval, (int) (uintptr_t) param);\n    return interval;\n}\n\nint\nmain(int argc, char *argv[])\n{\n    int i, desired;\n    SDL_TimerID t1, t2, t3;\n    Uint32 start32, now32;\n    Uint64 start, now;\n\n    if (SDL_Init(SDL_INIT_TIMER) < 0) {\n        fprintf(stderr, \"Couldn't initialize SDL: %s\\n\", SDL_GetError());\n        return (1);\n    }\n\n    /* Start the timer */\n    desired = 0;\n    if (argv[1]) {\n        desired = atoi(argv[1]);\n    }\n    if (desired == 0) {\n        desired = DEFAULT_RESOLUTION;\n    }\n    t1 = SDL_AddTimer(desired, ticktock, NULL);\n\n    /* Wait 10 seconds */\n    printf(\"Waiting 10 seconds\\n\");\n    SDL_Delay(10 * 1000);\n\n    /* Stop the timer */\n    SDL_RemoveTimer(t1);\n\n    /* Print the results */\n    if (ticks) {\n        fprintf(stderr,\n                \"Timer resolution: desired = %d ms, actual = %f ms\\n\",\n                desired, (double) (10 * 1000) / ticks);\n    }\n\n    /* Test multiple timers */\n    printf(\"Testing multiple timers...\\n\");\n    t1 = SDL_AddTimer(100, callback, (void *) 1);\n    if (!t1)\n        fprintf(stderr, \"Could not create timer 1: %s\\n\", SDL_GetError());\n    t2 = SDL_AddTimer(50, callback, (void *) 2);\n    if (!t2)\n        fprintf(stderr, \"Could not create timer 2: %s\\n\", SDL_GetError());\n    t3 = SDL_AddTimer(233, callback, (void *) 3);\n    if (!t3)\n        fprintf(stderr, \"Could not create timer 3: %s\\n\", SDL_GetError());\n\n    /* Wait 10 seconds */\n    printf(\"Waiting 10 seconds\\n\");\n    SDL_Delay(10 * 1000);\n\n    printf(\"Removing timer 1 and waiting 5 more seconds\\n\");\n    SDL_RemoveTimer(t1);\n\n    SDL_Delay(5 * 1000);\n\n    SDL_RemoveTimer(t2);\n    SDL_RemoveTimer(t3);\n\n    start = SDL_GetPerformanceCounter();\n    for (i = 0; i < 1000000; ++i) {\n        ticktock(0, NULL);\n    }\n    now = SDL_GetPerformanceCounter();\n    printf(\"1 million iterations of ticktock took %f ms\\n\", (double)((now - start)*1000) / SDL_GetPerformanceFrequency());\n\n    printf(\"Performance counter frequency: %llu\\n\", (unsigned long long) SDL_GetPerformanceFrequency());\n    start32 = SDL_GetTicks();\n    start = SDL_GetPerformanceCounter();\n    SDL_Delay(1000);\n    now = SDL_GetPerformanceCounter();\n    now32 = SDL_GetTicks();\n    printf(\"Delay 1 second = %d ms in ticks, %f ms according to performance counter\\n\", (now32-start32), (double)((now - start)*1000) / SDL_GetPerformanceFrequency());\n\n    SDL_Quit();\n    return (0);\n}\n\n/* vi: set ts=4 sw=4 expandtab: */\n"]}