{"version":3,"file":"checkkeys.c.js","sources":["../SDL-1.2.15/checkkeys.c"],"names":[],"mappingstDA;AAAA;AACA;;AAEA;AAAA;AAwDA;;;;;AApDA;AAAA;;;AAEA;AAAA;;;AAEA;AAAA;;;AAEA;AAAA;;;AAEA;AAAA;;;AAEA;AAAA;;;AAEA;AAAA;;;AAEA;AAAA;;;AAEA;AAAA;;;AAEA;AAAA;;;AAkCA;;;;AAhCA;AAAA;AAgCA;;;;;;;;;;AAWA;AAAA;AAAA;AAAA;;;AAqCA;;;;;;;;;;AA/BA;AACA;;;;;;;;;;;;;;AAGA;AAAA;AAAA;AAAA;AACA;;;AADA;AAAA;AAAA;AAAA;AACA;;;;AAMA;AACA;AAAA;AAAA;AACA;;;AAIA;AAGA;AAUA;;;AACA;;;;;;;;;AAQA;;;;;AAIA;AAEA;;;;AAFA;;AAEA;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;AAiBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AApJA;AACA","sourcesContent":["\n/* Simple program:  Loop, watching keystrokes\n   Note that you need to call SDL_PollEvent() or SDL_WaitEvent() to \n   pump the event loop and catch keystrokes.\n*/\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\n#include \"SDL.h\"\n\n#ifdef EMSCRIPTEN\n\t#include <emscripten.h>\n\tvoid main_loop();\n#endif\n\n/* Call this instead of exit(), so we can clean up SDL: atexit() is evil. */\nstatic void quit(int rc)\n{\n\tSDL_Quit();\n\texit(rc);\n}\n\nstatic void print_modifiers(void)\n{\n\tint mod;\n\tprintf(\" modifiers:\");\n\tmod = SDL_GetModState();\n\tif(!mod) {\n\t\tprintf(\" (none)\");\n\t\treturn;\n\t}\n\tif(mod & KMOD_LSHIFT)\n\t\tprintf(\" LSHIFT\");\n\tif(mod & KMOD_RSHIFT)\n\t\tprintf(\" RSHIFT\");\n\tif(mod & KMOD_LCTRL)\n\t\tprintf(\" LCTRL\");\n\tif(mod & KMOD_RCTRL)\n\t\tprintf(\" RCTRL\");\n\tif(mod & KMOD_LALT)\n\t\tprintf(\" LALT\");\n\tif(mod & KMOD_RALT)\n\t\tprintf(\" RALT\");\n\tif(mod & KMOD_LMETA)\n\t\tprintf(\" LMETA\");\n\tif(mod & KMOD_RMETA)\n\t\tprintf(\" RMETA\");\n\tif(mod & KMOD_NUM)\n\t\tprintf(\" NUM\");\n\tif(mod & KMOD_CAPS)\n\t\tprintf(\" CAPS\");\n\tif(mod & KMOD_MODE)\n\t\tprintf(\" MODE\");\n}\n\nstatic void PrintKey(SDL_keysym *sym, int pressed)\n{\n\t/* Print the keycode, name and state */\n\tif ( sym->sym ) {\n\t\tprintf(\"Key %s:  %d-%s \", pressed ?  \"pressed\" : \"released\",\n\t\t\t\t\tsym->sym, SDL_GetKeyName(sym->sym));\n\t} else {\n\t\tprintf(\"Unknown Key (scancode = %d) %s \", sym->scancode,\n\t\t\t\t\tpressed ?  \"pressed\" : \"released\");\n\t}\n\n\t/* Print the translated character, if one exists */\n\tif ( sym->unicode ) {\n\t\t/* Is it a control-character? */\n\t\tif ( sym->unicode < ' ' ) {\n\t\t\tprintf(\" (^%c)\", sym->unicode+'@');\n\t\t} else {\n#ifdef UNICODE\n\t\t\tprintf(\" (%c)\", sym->unicode);\n#else\n\t\t\t/* This is a Latin-1 program, so only show 8-bits */\n\t\t\tif ( !(sym->unicode & 0xFF00) )\n\t\t\t\tprintf(\" (%c)\", sym->unicode);\n\t\t\telse\n\t\t\t\tprintf(\" (0x%X)\", sym->unicode);\n#endif\n\t\t}\n\t}\n\tprint_modifiers();\n\tprintf(\"\\n\");\n}\n\nint main(int argc, char *argv[])\n{\n\tSDL_Event event;\n\tint done;\n\tUint32 videoflags;\n\n\t/* Initialize SDL */\n\tif ( SDL_Init(SDL_INIT_VIDEO) < 0 ) {\n\t\tfprintf(stderr, \"Couldn't initialize SDL: %s\\n\",SDL_GetError());\n\t\treturn(1);\n\t}\n\n\tvideoflags = SDL_SWSURFACE;\n\twhile( argc > 1 ) {\n\t\t--argc;\n\t\tif ( argv[argc] && !strcmp(argv[argc], \"-fullscreen\") ) {\n\t\t\tvideoflags |= SDL_FULLSCREEN;\n\t\t} else {\n\t\t\tfprintf(stderr, \"Usage: %s [-fullscreen]\\n\", argv[0]);\n\t\t\tquit(1);\n\t\t}\n\t}\n\n\t/* Set 640x480 video mode */\n\tif ( SDL_SetVideoMode(640, 480, 0, videoflags) == NULL ) {\n\t\tfprintf(stderr, \"Couldn't set 640x480 video mode: %s\\n\",\n\t\t\t\t\t\t\tSDL_GetError());\n\t\tquit(2);\n\t}\n\n\t/* Enable UNICODE translation for keyboard input */\n\tSDL_EnableUNICODE(1);\n\n\t/* Enable auto repeat for keyboard input */\n\tSDL_EnableKeyRepeat(SDL_DEFAULT_REPEAT_DELAY,\n\t                    SDL_DEFAULT_REPEAT_INTERVAL);\n\n#ifndef EMSCRIPTEN\n\t/* Watch keystrokes */\n\tdone = 0;\n\twhile ( !done ) {\n\t\t/* Check for events */\n\t\tSDL_WaitEvent(&event);\n#else\n\temscripten_set_main_loop(&main_loop, 0, 1);\n}\n\nvoid main_loop()\n{\n\tint done = 0;\n\tSDL_Event event;\n\t\n\t// Report success to the test framework to make this test work without user interaction.\n\temscripten_run_script(\"report(true);\");\n\t\n\twhile(SDL_PollEvent(&event)) {\n#endif\n\t\tswitch (event.type) {\n\t\t\tcase SDL_KEYDOWN:\n\t\t\t\tPrintKey(&event.key.keysym, 1);\n\t\t\t\tbreak;\n\t\t\tcase SDL_KEYUP:\n\t\t\t\tPrintKey(&event.key.keysym, 0);\n\t\t\t\tbreak;\n\t\t\tcase SDL_MOUSEBUTTONDOWN:\n\t\t\t\t/* Any button press quits the app... */\n\t\t\tcase SDL_QUIT:\n\t\t\t\tdone = 1;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n#ifndef EMSCRIPTEN\n\tSDL_Quit();\n\treturn(0);\n#else\n\tif(done) {\n\t\tSDL_Quit();\n\t}\n#endif\n}\n"]}