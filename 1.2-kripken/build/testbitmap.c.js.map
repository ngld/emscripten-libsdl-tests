{"version":3,"file":"testbitmap.c.js","sources":["../SDL-1.2.15/testbitmap.c"],"names":[],"mappingsyEA;AAAA;AAAA;AAAA;;;AAyFA;;;;;;;;;;;AAlFA;AACA;AAAA;AACA;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAYA;AAAA;AAGA;;;;;;;AAKA;AAAA;AAAA;;AACA;AACA;AAAA;AAAA;AACA;;;;;;AAMA;AAAA;AACA;AACA;AAHA;;AAKA;;;;;;AAKA;AACA;AAAA;AAAA;AACA;;;AAEA;AAAA;AACA;AAQA;AAAA;;;;;;;;;;;;;AACA;AACA;AACA;AACA;;;;AAEA;AAFA;AAAA;;;;;;;;;;;AAJA;AAAA;;;;;;;;;;;;;;;;;;;;AANA;AACA;AAAA;AAFA;AAAA;;;;;;;;;;;;;AAkBA;AACA;AAGA;AAAA;;AAGA;;;AASA;;;AAEA;;;;;;;;;AAtIA;;AAEA;AACA;AAAA;AAAA;;;AAwBA;;AAnBA;AACA;AACA;;;;AAiBA;;AAJA;;;;;;;;;;AAZA;;;;;;;;;;;AAgBA;;;AAhBA;;;;AAIA;AAGA;AAJA;;;;;;;;;;;;;;;;;;AAaA;;;;;;;;AAmHA;;;;;AAIA;AAIA;AAAA;AACA;AAAA;AACA;AACA;;;;AAPA;;AAIA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;AAsBA;AAAA;AACA;AACA;;;;;;AAFA;AAAA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA/LA;AACA","sourcesContent":["\n/* Simple program:  Test bitmap blits */\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#ifdef EMSCRIPTEN\n#include <emscripten.h>\n\nvoid main_loop();\n#endif\n\n#include \"SDL.h\"\n#include \"picture.xbm\"\n\n/* Call this instead of exit(), so we can clean up SDL: atexit() is evil. */\nstatic void quit(int rc)\n{\n\tSDL_Quit();\n\texit(rc);\n}\n\nSDL_Surface *LoadXBM(SDL_Surface *screen, int w, int h, Uint8 *bits)\n{\n\tSDL_Surface *bitmap;\n\tUint8 *line;\n\n\t/* Allocate the bitmap */\n\tbitmap = SDL_CreateRGBSurface(SDL_SWSURFACE, w, h, 1, 0, 0, 0, 0);\n\tif ( bitmap == NULL ) {\n\t\tfprintf(stderr, \"Couldn't allocate bitmap: %s\\n\",\n\t\t\t\t\t\tSDL_GetError());\n\t\treturn(NULL);\n\t}\n\n\t/* Copy the pixels */\n\tline = (Uint8 *)bitmap->pixels;\n\tw = (w+7)/8;\n\twhile ( h-- ) {\n\t\tmemcpy(line, bits, w);\n\t\t/* X11 Bitmap images have the bits reversed */\n\t\t{ int i, j; Uint8 *buf, byte;\n\t\t\tfor ( buf=line, i=0; i<w; ++i, ++buf ) {\n\t\t\t\tbyte = *buf;\n\t\t\t\t*buf = 0;\n\t\t\t\tfor ( j=7; j>=0; --j ) {\n\t\t\t\t\t*buf |= (byte&0x01)<<j;\n\t\t\t\t\tbyte >>= 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tline += bitmap->pitch;\n\t\tbits += w;\n\t}\n\treturn(bitmap);\n}\n\nSDL_Surface *bitmap;\nSDL_Surface *screen;\nint main(int argc, char *argv[])\n{\n\tUint8  video_bpp;\n\tUint32 videoflags;\n\tUint8 *buffer;\n\tint i, k, done;\n\tUint16 *buffer16;\n        Uint16 color;\n        Uint8  gradient;\n\tSDL_Color palette[256];\n\n\n\t/* Initialize SDL */\n\tif ( SDL_Init(SDL_INIT_VIDEO) < 0 ) {\n\t\tfprintf(stderr, \"Couldn't initialize SDL: %s\\n\",SDL_GetError());\n\t\treturn(1);\n\t}\n\n\tvideo_bpp = 0;\n\tvideoflags = SDL_SWSURFACE;\n\twhile ( argc > 1 ) {\n\t\t--argc;\n\t\tif ( strcmp(argv[argc-1], \"-bpp\") == 0 ) {\n\t\t\tvideo_bpp = atoi(argv[argc]);\n\t\t\t--argc;\n\t\t} else\n\t\tif ( strcmp(argv[argc], \"-warp\") == 0 ) {\n\t\t\tvideoflags |= SDL_HWPALETTE;\n\t\t} else\n\t\tif ( strcmp(argv[argc], \"-hw\") == 0 ) {\n\t\t\tvideoflags |= SDL_HWSURFACE;\n\t\t} else\n\t\tif ( strcmp(argv[argc], \"-fullscreen\") == 0 ) {\n\t\t\tvideoflags |= SDL_FULLSCREEN;\n\t\t} else {\n\t\t\tfprintf(stderr,\n\t\t\t\"Usage: %s [-bpp N] [-warp] [-hw] [-fullscreen]\\n\",\n\t\t\t\t\t\t\t\targv[0]);\n\t\t\tquit(1);\n\t\t}\n\t}\n\n\t/* Set 640x480 video mode */\n\tif ( (screen=SDL_SetVideoMode(640,480,video_bpp,videoflags)) == NULL ) {\n\t\tfprintf(stderr, \"Couldn't set 640x480x%d video mode: %s\\n\",\n\t\t\t\t\t\tvideo_bpp, SDL_GetError());\n\t\tquit(2);\n\t}\n\n\tif (video_bpp==8) {\n\t\t/* Set a gray colormap, reverse order from white to black */\n\t\tfor ( i=0; i<256; ++i ) {\n\t\t\tpalette[i].r = 255-i;\n\t\t\tpalette[i].g = 255-i;\n\t\t\tpalette[i].b = 255-i;\n\t\t}\n\t\tSDL_SetColors(screen, palette, 0, 256);\n\t}\n\n\t/* Set the surface pixels and refresh! */\n\tif ( SDL_LockSurface(screen) < 0 ) {\n\t\tfprintf(stderr, \"Couldn't lock the display surface: %s\\n\",\n\t\t\t\t\t\t\tSDL_GetError());\n\t\tquit(2);\n\t}\n\tbuffer=(Uint8 *)screen->pixels;\n\tif (screen->format->BytesPerPixel!=2) {\n        \tfor ( i=0; i<screen->h; ++i ) {\n        \t\tmemset(buffer,(i*255)/screen->h, screen->pitch);\n        \t\tbuffer += screen->pitch;\n        \t}\n        }\n        else\n        {\n\t\tfor ( i=0; i<screen->h; ++i ) {\n\t\t\tgradient=((i*255)/screen->h);\n                        color = SDL_MapRGB(screen->format, gradient, gradient, gradient);\n                        buffer16=(Uint16*)buffer;\n                        for (k=0; k<screen->w; k++)\n                        {\n                            *(buffer16+k)=color;\n                        }\n\t\t\tbuffer += screen->pitch;\n\t\t}\n        }\n\tSDL_UnlockSurface(screen);\n\tSDL_UpdateRect(screen, 0, 0, 0, 0);\n\n\t/* Load the bitmap */\n\tbitmap = LoadXBM(screen, picture_width, picture_height,\n\t\t\t\t\t(Uint8 *)picture_bits);\n\tif ( bitmap == NULL ) {\n\t\tquit(1);\n\t}\n\t\n#ifndef EMSCRIPTEN\n\tSDL_Event event;\n\t/* Wait for a keystroke */\n\tdone = 0;\n\twhile ( !done ) {\n#else\n\temscripten_set_main_loop(&main_loop, 30, 1);\n\treturn 0;\n}\n\nvoid main_loop()\n{\n\tint done = 0;\n\tSDL_Event event;\n\t\n\t// Report success to the test framework to make this test work without user interaction.\n\temscripten_run_script(\"report(true);\");\n#endif\n\t\t/* Check for events */\n\t\twhile ( SDL_PollEvent(&event) ) {\n\t\t\tswitch (event.type) {\n\t\t\t\tcase SDL_MOUSEBUTTONDOWN: {\n\t\t\t\t\tSDL_Rect dst;\n\n\t\t\t\t\tdst.x = event.button.x - bitmap->w/2;\n\t\t\t\t\tdst.y = event.button.y - bitmap->h/2;\n\t\t\t\t\tdst.w = bitmap->w;\n\t\t\t\t\tdst.h = bitmap->h;\n\t\t\t\t\tSDL_BlitSurface(bitmap, NULL,\n\t\t\t\t\t\t\t\tscreen, &dst);\n\t\t\t\t\tSDL_UpdateRects(screen,1,&dst);\n\t\t\t\t\tprintf(\"User clicked at %d, %d!\\n\", dst.x, dst.y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase SDL_KEYDOWN:\n\t\t\t\t\t/* Any key press quits the app... */\n\t\t\t\t\tdone = 1;\n\t\t\t\t\tbreak;\n\t\t\t\tcase SDL_QUIT:\n\t\t\t\t\tdone = 1;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n#ifndef EMSCRIPTEN\n\t}\n\t\n\tSDL_FreeSurface(bitmap);\n\tSDL_Quit();\n\treturn(0);\n#else\n\tif(done) {\n\t\tSDL_FreeSurface(bitmap);\n\t\tSDL_Quit();\n\t\texit(0);\n\t}\n#endif\n}\n"]}