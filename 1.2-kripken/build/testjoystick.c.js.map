{"version":3,"file":"testjoystick.c.js","sources":["../SDL-1.2.15/testjoystick.c"],"names":[],"mappingssBA;;AAEA;AAAA;AAAA;AAAA;;;;AAKA;AACA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AAwGA;AAzCA;AACA;AACA;AACA;AA3DA;AAEA;AAAA;AAAA;AAMA;AAAA;AAGA;AAaA;AAAA;AAAA;AAOA;AAUA;;;;;;;;;;;;AAvCA;AAAA;AAAA;AAAA;;;;;;AAMA;AAAA;AAAA;AAGA;;AACA;AAAA;;;;;;;;AAEA;AAAA;;;;;;AAEA;AAAA;;;;;;AAEA;AAAA;;;;AAEA;AAAA;;AACA;;;;;;AAGA;AAAA;AAAA;AAAA;AAAA;;;;;;AAOA;AAAA;AAAA;;;;;;AAKA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoBA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AAZA;;;AAgBA;AAGA;AAEA;;;;;;AASA;;;;;;AAQA;AAAA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;AAYA;AAAA;AAAA;AAAA;AACA;AAAA;;AAIA;AAAA;AAAA;;AAMA;;;AAJA;AACA;AAAA;AACA;;AAEA;AAAA;AAAA;;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;;AAXA;;;AAeA;AAAA;;AAUA;;AAEA;;AAXA;;AAEA;AACA;AAAA;AAAA;AAMA;;AAEA;;AANA;AACA;AAGA;;AAEA","sourcesContent":["\n/* Simple program to test the SDL joystick routines */\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\n#include \"SDL.h\"\n\n#define SCREEN_WIDTH\t640\n#define SCREEN_HEIGHT\t480\n\nvoid WatchJoystick(SDL_Joystick *joystick)\n{\n\tSDL_Surface *screen;\n\tconst char *name;\n\tint i, done;\n\tSDL_Event event;\n\tint x, y, draw;\n\tSDL_Rect axis_area[2];\n\n\t/* Set a video mode to display joystick axis position */\n\tscreen = SDL_SetVideoMode(SCREEN_WIDTH, SCREEN_HEIGHT, 16, 0);\n\tif ( screen == NULL ) {\n\t\tfprintf(stderr, \"Couldn't set video mode: %s\\n\",SDL_GetError());\n\t\treturn;\n\t}\n\n\t/* Print info about the joystick we are watching */\n\tname = SDL_JoystickName(SDL_JoystickIndex(joystick));\n\tprintf(\"Watching joystick %d: (%s)\\n\", SDL_JoystickIndex(joystick),\n\t       name ? name : \"Unknown Joystick\");\n\tprintf(\"Joystick has %d axes, %d hats, %d balls, and %d buttons\\n\",\n\t       SDL_JoystickNumAxes(joystick), SDL_JoystickNumHats(joystick),\n\t       SDL_JoystickNumBalls(joystick),SDL_JoystickNumButtons(joystick));\n\n\t/* Initialize drawing rectangles */\n\tmemset(axis_area, 0, (sizeof axis_area));\n\tdraw = 0;\n\n\t/* Loop, getting joystick events! */\n\tdone = 0;\n\twhile ( ! done ) {\n\t\twhile ( SDL_PollEvent(&event) ) {\n\t\t\tswitch (event.type) {\n\t\t\t    case SDL_JOYAXISMOTION:\n\t\t\t\tprintf(\"Joystick %d axis %d value: %d\\n\",\n\t\t\t\t       event.jaxis.which,\n\t\t\t\t       event.jaxis.axis,\n\t\t\t\t       event.jaxis.value);\n\t\t\t\tbreak;\n\t\t\t    case SDL_JOYHATMOTION:\n\t\t\t\tprintf(\"Joystick %d hat %d value:\",\n\t\t\t\t       event.jhat.which,\n\t\t\t\t       event.jhat.hat);\n\t\t\t\tif ( event.jhat.value == SDL_HAT_CENTERED )\n\t\t\t\t\tprintf(\" centered\");\n\t\t\t\tif ( event.jhat.value & SDL_HAT_UP )\n\t\t\t\t\tprintf(\" up\");\n\t\t\t\tif ( event.jhat.value & SDL_HAT_RIGHT )\n\t\t\t\t\tprintf(\" right\");\n\t\t\t\tif ( event.jhat.value & SDL_HAT_DOWN )\n\t\t\t\t\tprintf(\" down\");\n\t\t\t\tif ( event.jhat.value & SDL_HAT_LEFT )\n\t\t\t\t\tprintf(\" left\");\n\t\t\t\tprintf(\"\\n\");\n\t\t\t\tbreak;\n\t\t\t    case SDL_JOYBALLMOTION:\n\t\t\t\tprintf(\"Joystick %d ball %d delta: (%d,%d)\\n\",\n\t\t\t\t       event.jball.which,\n\t\t\t\t       event.jball.ball,\n\t\t\t\t       event.jball.xrel,\n\t\t\t\t       event.jball.yrel);\n\t\t\t\tbreak;\n\t\t\t    case SDL_JOYBUTTONDOWN:\n\t\t\t\tprintf(\"Joystick %d button %d down\\n\",\n\t\t\t\t       event.jbutton.which,\n\t\t\t\t       event.jbutton.button);\n\t\t\t\tbreak;\n\t\t\t    case SDL_JOYBUTTONUP:\n\t\t\t\tprintf(\"Joystick %d button %d up\\n\",\n\t\t\t\t       event.jbutton.which,\n\t\t\t\t       event.jbutton.button);\n\t\t\t\tbreak;\n\t\t\t    case SDL_KEYDOWN:\n\t\t\t\tif ( event.key.keysym.sym != SDLK_ESCAPE ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t/* Fall through to signal quit */\n\t\t\t    case SDL_QUIT:\n\t\t\t\tdone = 1;\n\t\t\t\tbreak;\n\t\t\t    default:\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t/* Update visual joystick state */\n\t\tfor ( i=0; i<SDL_JoystickNumButtons(joystick); ++i ) {\n\t\t\tSDL_Rect area;\n\n\t\t\tarea.x = i*34;\n\t\t\tarea.y = SCREEN_HEIGHT-34;\n\t\t\tarea.w = 32;\n\t\t\tarea.h = 32;\n\t\t\tif (SDL_JoystickGetButton(joystick, i) == SDL_PRESSED) {\n\t\t\t\tSDL_FillRect(screen, &area, 0xFFFF);\n\t\t\t} else {\n\t\t\t\tSDL_FillRect(screen, &area, 0x0000);\n\t\t\t}\n\t\t\tSDL_UpdateRects(screen, 1, &area);\n\t\t}\n\n\t\t/* Erase previous axes */\n\t\tSDL_FillRect(screen, &axis_area[draw], 0x0000);\n\n\t\t/* Draw the X/Y axis */\n\t\tdraw = !draw;\n\t\tx = (((int)SDL_JoystickGetAxis(joystick, 0))+32768);\n\t\tx *= SCREEN_WIDTH;\n\t\tx /= 65535;\n\t\tif ( x < 0 ) {\n\t\t\tx = 0;\n\t\t} else\n\t\tif ( x > (SCREEN_WIDTH-16) ) {\n\t\t\tx = SCREEN_WIDTH-16;\n\t\t}\n\t\ty = (((int)SDL_JoystickGetAxis(joystick, 1))+32768);\n\t\ty *= SCREEN_HEIGHT;\n\t\ty /= 65535;\n\t\tif ( y < 0 ) {\n\t\t\ty = 0;\n\t\t} else\n\t\tif ( y > (SCREEN_HEIGHT-16) ) {\n\t\t\ty = SCREEN_HEIGHT-16;\n\t\t}\n\t\taxis_area[draw].x = (Sint16)x;\n\t\taxis_area[draw].y = (Sint16)y;\n\t\taxis_area[draw].w = 16;\n\t\taxis_area[draw].h = 16;\n\t\tSDL_FillRect(screen, &axis_area[draw], 0xFFFF);\n\n\t\tSDL_UpdateRects(screen, 2, axis_area);\n\t}\n}\n\nint main(int argc, char *argv[])\n{\n\tconst char *name;\n\tint i;\n\tSDL_Joystick *joystick;\n\n\t/* Initialize SDL (Note: video is required to start event loop) */\n\tif ( SDL_Init(SDL_INIT_VIDEO|SDL_INIT_JOYSTICK) < 0 ) {\n\t\tfprintf(stderr, \"Couldn't initialize SDL: %s\\n\",SDL_GetError());\n\t\texit(1);\n\t}\n\n\t/* Print information about the joysticks */\n\tprintf(\"There are %d joysticks attached\\n\", SDL_NumJoysticks());\n\tfor ( i=0; i<SDL_NumJoysticks(); ++i ) {\n\t\tname = SDL_JoystickName(i);\n\t\tprintf(\"Joystick %d: %s\\n\",i,name ? name : \"Unknown Joystick\");\n\t\tjoystick = SDL_JoystickOpen(i);\n\t\tif (joystick == NULL) {\n\t\t\tfprintf(stderr, \"SDL_JoystickOpen(%d) failed: %s\\n\", i, SDL_GetError());\n\t\t} else {\n\t\t\tprintf(\"       axes: %d\\n\", SDL_JoystickNumAxes(joystick));\n\t\t\tprintf(\"      balls: %d\\n\", SDL_JoystickNumBalls(joystick));\n\t\t\tprintf(\"       hats: %d\\n\", SDL_JoystickNumHats(joystick));\n\t\t\tprintf(\"    buttons: %d\\n\", SDL_JoystickNumButtons(joystick));\n\t\t\tSDL_JoystickClose(joystick);\n\t\t}\n\t}\n\n\tif ( argv[1] ) {\n\t\tjoystick = SDL_JoystickOpen(atoi(argv[1]));\n\t\tif ( joystick == NULL ) {\n\t\t\tprintf(\"Couldn't open joystick %d: %s\\n\", atoi(argv[1]),\n\t\t\t       SDL_GetError());\n\t\t} else {\n\t\t\tWatchJoystick(joystick);\n\t\t\tSDL_JoystickClose(joystick);\n\t\t}\n\t}\n\tSDL_QuitSubSystem(SDL_INIT_VIDEO|SDL_INIT_JOYSTICK);\n\n\treturn(0);\n}\n"]}