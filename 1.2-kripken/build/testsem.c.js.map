{"version":3,"file":"testsem.c.js","sources":["../SDL-1.2.15/testsem.c"],"names":[],"mappingssEA;AAAA;AAAA;AAAA;;;AAgCA;;AA7BA;AACA;AAGA;AAEA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAGA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAvDA;AACA;AAEA;AACA;AAGA;;AAIA;;AAEA;AAAA;AAAA;;AA8CA;;;AAEA;;;;;;AArFA;;AASA;AAAA;;AACA;;AAPA;;AADA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;;AAEA;AAAA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA","sourcesContent":["\n/* Simple test of the SDL semaphore code */\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <signal.h>\n\n#include \"SDL.h\"\n#include \"SDL_thread.h\"\n\n#define NUM_THREADS 10\n\nstatic SDL_sem *sem;\nint alive = 1;\n\nint SDLCALL ThreadFunc(void *data)\n{\n\tint threadnum = (int)(uintptr_t)data;\n\twhile ( alive ) {\n\t\tSDL_SemWait(sem);\n\t\tfprintf(stderr, \"Thread number %d has got the semaphore (value = %d)!\\n\", threadnum, SDL_SemValue(sem));\n\t\tSDL_Delay(200);\n\t\tSDL_SemPost(sem);\n\t\tfprintf(stderr, \"Thread number %d has released the semaphore (value = %d)!\\n\", threadnum, SDL_SemValue(sem));\n\t\tSDL_Delay(1); /* For the scheduler */\n\t}\n\tprintf(\"Thread number %d exiting.\\n\", threadnum);\n\treturn 0;\n}\n\nstatic void killed(int sig)\n{\n\talive = 0;\n}\n\nstatic void TestWaitTimeout(void)\n{\n\tUint32 start_ticks;\n\tUint32 end_ticks;\n\tUint32 duration;\n\n\tsem = SDL_CreateSemaphore(0);\n\tprintf(\"Waiting 2 seconds on semaphore\\n\");\n\n\tstart_ticks = SDL_GetTicks();\n\tSDL_SemWaitTimeout(sem, 2000);\n\tend_ticks = SDL_GetTicks();\n\n\tduration = end_ticks - start_ticks;\n\t\n\t/* Accept a little offset in the effective wait */\n\tif (duration > 1900 && duration < 2050)\n\t\tprintf(\"Wait done.\\n\");\n\telse\n\t\tfprintf(stderr, \"Wait took %d milliseconds\\n\", duration);\n}\n\nint main(int argc, char **argv)\n{\n\tSDL_Thread *threads[NUM_THREADS];\n\tuintptr_t i;\n\tint init_sem;\n\n\t/*if(argc < 2) {\n\t\tfprintf(stderr,\"Usage: %s init_value\\n\", argv[0]);\n\t\treturn(1);\n\t}*/\n\n\t/* Load the SDL library */\n\tif ( SDL_Init(0) < 0 ) {\n\t\tfprintf(stderr, \"Couldn't initialize SDL: %s\\n\",SDL_GetError());\n\t\treturn(1);\n\t}\n\tsignal(SIGTERM, killed);\n\tsignal(SIGINT, killed);\n\t\n\tinit_sem = 2; //atoi(argv[1]);\n\tsem = SDL_CreateSemaphore(init_sem);\n\t\n\tprintf(\"Running %d threads, semaphore value = %d\\n\", NUM_THREADS, init_sem);\n\t/* Create all the threads */\n\tfor( i = 0; i < NUM_THREADS; ++i ) {\n\t\tthreads[i] = SDL_CreateThread(ThreadFunc, (void*)i);\n\t}\n\n\t/* Wait 10 seconds */\n\tSDL_Delay(10 * 1000);\n\n\t/* Wait for all threads to finish */\n\tprintf(\"Waiting for threads to finish\\n\");\n\talive = 0;\n\tfor( i = 0; i < NUM_THREADS; ++i ) {\n\t\tSDL_WaitThread(threads[i], NULL);\n\t}\n\tprintf(\"Finished waiting for threads\\n\");\n\n\tSDL_DestroySemaphore(sem);\n\n\tTestWaitTimeout();\n\n\tSDL_Quit();\n\treturn(0);\n}\n"]}