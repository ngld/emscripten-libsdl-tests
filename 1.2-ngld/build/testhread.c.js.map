{"version":3,"file":"testhread.c.js","sources":["../SDL-1.2.15/testhread.c"],"names":[],"mappingsoCA;;;AA/BA;;AAEA;AAAA;AAAA;AAAA;AACA;;;AAEA;AACA;;AAEA;;;AAKA;AAAA;AAAA;AAAA;AACA;;;AAEA;AACA;;AAIA;;AAGA;AAAA;AAAA;AAAA;AACA;;;AAEA;AAEA;;;AAEA;;;;;;AA3DA;AAAA;AAAA;;;AAEA;AAAA;AACA;;;AAEA;AAAA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;AArBA;AACA","sourcesContent":["\n/* Simple test of the SDL threading code */\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <signal.h>\n\n#include \"SDL.h\"\n#include \"SDL_thread.h\"\n\nstatic int alive = 0;\n\n/* Call this instead of exit(), so we can clean up SDL: atexit() is evil. */\nstatic void quit(int rc)\n{\n\tSDL_Quit();\n\texit(rc);\n}\n\nint SDLCALL ThreadFunc(void *data)\n{\n\tprintf(\"Started thread %s: My thread id is %u\\n\",\n\t\t\t\t(char *)data, SDL_ThreadID());\n\twhile ( alive ) {\n\t\tprintf(\"Thread '%s' is alive!\\n\", (char *)data);\n\t\tSDL_Delay(1*1000);\n\t}\n\tprintf(\"Thread '%s' exiting!\\n\", (char *)data);\n\treturn(0);\n}\n\nstatic void killed(int sig)\n{\n\tprintf(\"Killed with SIGTERM, waiting 5 seconds to exit\\n\");\n\tSDL_Delay(5*1000);\n\talive = 0;\n\tquit(0);\n}\n\nint main(int argc, char *argv[])\n{\n\tSDL_Thread *thread;\n\n\t/* Load the SDL library */\n\tif ( SDL_Init(0) < 0 ) {\n\t\tfprintf(stderr, \"Couldn't initialize SDL: %s\\n\",SDL_GetError());\n\t\treturn(1);\n\t}\n\n\talive = 1;\n\tthread = SDL_CreateThread(ThreadFunc, \"#1\");\n\tif ( thread == NULL ) {\n\t\tfprintf(stderr, \"Couldn't create thread: %s\\n\", SDL_GetError());\n\t\tquit(1);\n\t}\n\tSDL_Delay(5*1000);\n\tprintf(\"Waiting for thread #1\\n\");\n\talive = 0;\n\tSDL_WaitThread(thread, NULL);\n\n\talive = 1;\n\tthread = SDL_CreateThread(ThreadFunc, \"#2\");\n\tif ( thread == NULL ) {\n\t\tfprintf(stderr, \"Couldn't create thread: %s\\n\", SDL_GetError());\n\t\tquit(1);\n\t}\n\tSDL_Delay(5*1000);\n\tprintf(\"Killing thread #2\\n\");\n\tSDL_KillThread(thread);\n\n\talive = 1;\n\tsignal(SIGTERM, killed);\n\tthread = SDL_CreateThread(ThreadFunc, \"#3\");\n\tif ( thread == NULL ) {\n\t\tfprintf(stderr, \"Couldn't create thread: %s\\n\", SDL_GetError());\n\t\tquit(1);\n\t}\n\traise(SIGTERM);\n\n\tSDL_Quit();\t/* Never reached */\n\treturn(0);\t/* Never reached */\n}\n"]}