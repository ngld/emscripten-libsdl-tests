{"version":3,"file":"testfile.c.js","sources":["../SDL-1.2.15/testfile.c"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA;AACA;AA0BA;;AACA;;;AACA;;AACA;;;AACA;;AACA;;;AACA;;AACA;;;AACA;;AACA;;;AACA;AAOA;;AACA;;;AACA;;AACA;;;AACA;;AACA;;;AACA;AAAA;AACA;;AACA;;;AACA;AAAA;AACA;;AACA;;;AACA;AAAA;AACA;;AACA;;;AACA;AAAA;AACA;AAKA;;AACA;;;AACA;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;AACA;;AAAA;;;AACA;AAEA;;AACA;;;AACA;;AAAA;;;;AACA;;;AACA;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;AACA;AAGA;;AACA;;;AACA;;AAAA;;;;AACA;;;;AACA;;;AACA;;AAAA;;;AACA;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;AACA;AACA;AAGA;;AACA;;;AACA;;AAAA;;;;AACA;;;;AACA;;;AACA;;AAAA;;;AACA;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;AACA;AACA;AAGA;;AACA;;;AACA;;AAAA;;;;AACA;;;;AACA;;;AACA;;AAAA;;;AAEA;;AAAA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AAEA;;;;AACA;;;;AAGA;AAAA;AACA;AAxJA;AACA;;AAyJA;;AAJA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAhJA;AAAA;;AAEA;AAAA;;AARA;AACA;AAUA","sourcesContent":["\n/* sanity tests on SDL_rwops.c (usefull for alternative implementations of stdio rwops) */\n\n#include <stdlib.h>\n\n#ifndef _MSC_VER\n#include <unistd.h>\n#endif\n\n#include \"SDL.h\"\n#include \"SDL_endian.h\"\n\n\n#include <stdio.h>\t\n\n/* WARNING ! those 2 files will be destroyed by this test program */\n#define FBASENAME1\t\"sdldata1\"\t\t/* this file will be created during tests */\n#define FBASENAME2\t\"sdldata2\"\t\t/* this file should not exists before starting test */\n\n\n#ifndef NULL\n#define NULL ((void *)0)\n#endif \n\nstatic void cleanup( void ) {\n\n\tunlink(FBASENAME1);\n\tunlink(FBASENAME2); \n}\n\nstatic void rwops_error_quit( unsigned line, SDL_RWops *rwops) {\n\t\n\tprintf(\"testfile.c(%d): failed\\n\",line);\n\tif (rwops) {\n\t\trwops->close(rwops); /* This calls SDL_FreeRW(rwops); */\n\t}\n\tcleanup();\n\texit(1); /* quit with rwops error (test failed) */\n}\n\n#define RWOP_ERR_QUIT(x)\trwops_error_quit( __LINE__, (x) )\n\n\n\nint main(int argc, char *argv[])\n{\n\tSDL_RWops *rwops = NULL;\n\tchar test_buf[30];\n\t\n\tcleanup();\n\n/* test 1 : basic argument test: all those calls to SDL_RWFromFile should fail */\n\t\n\trwops = SDL_RWFromFile(NULL,NULL);\n\tif (rwops) RWOP_ERR_QUIT(rwops);\n\trwops = SDL_RWFromFile(NULL,\"ab+\");\n\tif (rwops) RWOP_ERR_QUIT(rwops);\n\trwops = SDL_RWFromFile(NULL,\"sldfkjsldkfj\");\n\tif (rwops) RWOP_ERR_QUIT(rwops);\n\trwops = SDL_RWFromFile(\"something\",\"\");\n\tif (rwops) RWOP_ERR_QUIT(rwops);\n\trwops = SDL_RWFromFile(\"something\",NULL);\n\tif (rwops) RWOP_ERR_QUIT(rwops);\t\n\tprintf(\"test1 OK\\n\");\n\n/* test 2 : check that inexistant file is not successfully opened/created when required */\n/* modes : r, r+ implie that file MUST exist \n   modes : a, a+, w, w+ checks that it succeeds (file may not exists)\n   \n */\n\trwops = SDL_RWFromFile(FBASENAME2,\"rb\"); /* this file doesn't exist that call must fail */\n\tif (rwops) RWOP_ERR_QUIT(rwops);\n\trwops = SDL_RWFromFile(FBASENAME2,\"rb+\"); /* this file doesn't exist that call must fail */\n\tif (rwops) RWOP_ERR_QUIT(rwops);\n\trwops = SDL_RWFromFile(FBASENAME2,\"wb\");\n\tif (!rwops) RWOP_ERR_QUIT(rwops); \n\trwops->close(rwops); unlink(FBASENAME2);\n\trwops = SDL_RWFromFile(FBASENAME2,\"wb+\");\n\tif (!rwops) RWOP_ERR_QUIT(rwops); \n\trwops->close(rwops); unlink(FBASENAME2);\n\trwops = SDL_RWFromFile(FBASENAME2,\"ab\"); \n\tif (!rwops) RWOP_ERR_QUIT(rwops); \n\trwops->close(rwops); unlink(FBASENAME2);\n\trwops = SDL_RWFromFile(FBASENAME2,\"ab+\");\n\tif (!rwops) RWOP_ERR_QUIT(rwops); \n\trwops->close(rwops); unlink(FBASENAME2);\n\tprintf(\"test2 OK\\n\");\n\n/* test 3 : creation, writing , reading, seeking, \n\t        test : w mode, r mode, w+ mode\n */\n\trwops = SDL_RWFromFile(FBASENAME1,\"wb\"); /* write only */\t\n\tif (!rwops)\t\t\t\t\t\t\t\t\t\t\tRWOP_ERR_QUIT(rwops);\n\tif (1 != rwops->write(rwops,\"1234567890\",10,1) )\tRWOP_ERR_QUIT(rwops);\t\t\n\tif (10 != rwops->write(rwops,\"1234567890\",1,10) )\tRWOP_ERR_QUIT(rwops);\t\t\n\tif (7 != rwops->write(rwops,\"1234567\",1,7) )\t\tRWOP_ERR_QUIT(rwops);\t\t\n\tif (0!=rwops->seek(rwops,0L,RW_SEEK_SET))\t\t\tRWOP_ERR_QUIT(rwops);\t\t\t\t\t\n\tif (0!=rwops->read(rwops,test_buf,1,1))\t\t\t\tRWOP_ERR_QUIT(rwops); /* we are in write only mode */\n\trwops->close(rwops);\n\n\trwops = SDL_RWFromFile(FBASENAME1,\"rb\"); /* read mode, file must exists */\n\tif (!rwops)\t\t\t\t\t\t\t\t\t\t\tRWOP_ERR_QUIT(rwops);\n\tif (0!=rwops->seek(rwops,0L,RW_SEEK_SET))\t\t\tRWOP_ERR_QUIT(rwops);\t\t\t\t\t\n\tif (20!=rwops->seek(rwops,-7,RW_SEEK_END))\t\t\tRWOP_ERR_QUIT(rwops);\t\t\t\t\t\n\tif (7!=rwops->read(rwops,test_buf,1,7))\t\t\t\tRWOP_ERR_QUIT(rwops);\t\t\n\tif (SDL_memcmp(test_buf,\"1234567\",7))\t\t\t\tRWOP_ERR_QUIT(rwops);\t\t\n\tif (0!=rwops->read(rwops,test_buf,1,1))\t\t\t\tRWOP_ERR_QUIT(rwops);\t\t\n\tif (0!=rwops->read(rwops,test_buf,10,100))\t\t\tRWOP_ERR_QUIT(rwops);\t\t\n\tif (0!=rwops->seek(rwops,-27,RW_SEEK_CUR))\t\t\tRWOP_ERR_QUIT(rwops);\t\t\n\tif (2!=rwops->read(rwops,test_buf,10,3))\t\t\tRWOP_ERR_QUIT(rwops);\t\t\t\t\n\tif (SDL_memcmp(test_buf,\"12345678901234567890\",20))\tRWOP_ERR_QUIT(rwops);\n\tif (0!=rwops->write(rwops,test_buf,1,1))\t\t\tRWOP_ERR_QUIT(rwops); /* readonly mode */\n\trwops->close(rwops);\n\n/* test 3: same with w+ mode */\n\trwops = SDL_RWFromFile(FBASENAME1,\"wb+\"); /* write + read + truncation */\t\t\n\tif (!rwops)\t\t\t\t\t\t\t\t\t\t\tRWOP_ERR_QUIT(rwops);\n\tif (1 != rwops->write(rwops,\"1234567890\",10,1) )\tRWOP_ERR_QUIT(rwops);\t\t\n\tif (10 != rwops->write(rwops,\"1234567890\",1,10) )\tRWOP_ERR_QUIT(rwops);\t\t\n\tif (7 != rwops->write(rwops,\"1234567\",1,7) )\t\tRWOP_ERR_QUIT(rwops);\t\t\n\tif (0!=rwops->seek(rwops,0L,RW_SEEK_SET))\t\t\tRWOP_ERR_QUIT(rwops);\t\t\t\t\t\n\tif (1!=rwops->read(rwops,test_buf,1,1))\t\t\t\tRWOP_ERR_QUIT(rwops); /* we are in read/write mode */\n\tif (0!=rwops->seek(rwops,0L,RW_SEEK_SET))\t\t\tRWOP_ERR_QUIT(rwops);\t\t\t\t\t\n\tif (20!=rwops->seek(rwops,-7,RW_SEEK_END))\t\t\tRWOP_ERR_QUIT(rwops);\t\t\t\t\t\n\tif (7!=rwops->read(rwops,test_buf,1,7))\t\t\t\tRWOP_ERR_QUIT(rwops);\t\t\n\tif (SDL_memcmp(test_buf,\"1234567\",7))\t\t\t\tRWOP_ERR_QUIT(rwops);\t\t\n\tif (0!=rwops->read(rwops,test_buf,1,1))\t\t\t\tRWOP_ERR_QUIT(rwops);\t\t\n\tif (0!=rwops->read(rwops,test_buf,10,100))\t\t\tRWOP_ERR_QUIT(rwops);\t\t\n\tif (0!=rwops->seek(rwops,-27,RW_SEEK_CUR))\t\t\tRWOP_ERR_QUIT(rwops);\t\t\n\tif (2!=rwops->read(rwops,test_buf,10,3))\t\t\tRWOP_ERR_QUIT(rwops);\t\t\t\t\n\tif (SDL_memcmp(test_buf,\"12345678901234567890\",20))\tRWOP_ERR_QUIT(rwops);\n\trwops->close(rwops);\n\tprintf(\"test3 OK\\n\");\n\n/* test 4: same in r+ mode */\n\trwops = SDL_RWFromFile(FBASENAME1,\"rb+\"); /* write + read + file must exists, no truncation */\t\t\n\tif (!rwops)\t\t\t\t\t\t\t\t\t\t\tRWOP_ERR_QUIT(rwops);\n\tif (1 != rwops->write(rwops,\"1234567890\",10,1) )\tRWOP_ERR_QUIT(rwops);\t\t\n\tif (10 != rwops->write(rwops,\"1234567890\",1,10) )\tRWOP_ERR_QUIT(rwops);\t\t\n\tif (7 != rwops->write(rwops,\"1234567\",1,7) )\t\tRWOP_ERR_QUIT(rwops);\t\t\n\tif (0!=rwops->seek(rwops,0L,RW_SEEK_SET))\t\t\tRWOP_ERR_QUIT(rwops);\t\t\t\t\t\n\tif (1!=rwops->read(rwops,test_buf,1,1))\t\t\t\tRWOP_ERR_QUIT(rwops); /* we are in read/write mode */\n\tif (0!=rwops->seek(rwops,0L,RW_SEEK_SET))\t\t\tRWOP_ERR_QUIT(rwops);\t\t\t\t\t\n\tif (20!=rwops->seek(rwops,-7,RW_SEEK_END))\t\t\tRWOP_ERR_QUIT(rwops);\t\t\t\t\t\n\tif (7!=rwops->read(rwops,test_buf,1,7))\t\t\t\tRWOP_ERR_QUIT(rwops);\t\t\n\tif (SDL_memcmp(test_buf,\"1234567\",7))\t\t\t\tRWOP_ERR_QUIT(rwops);\t\t\n\tif (0!=rwops->read(rwops,test_buf,1,1))\t\t\t\tRWOP_ERR_QUIT(rwops);\t\t\n\tif (0!=rwops->read(rwops,test_buf,10,100))\t\t\tRWOP_ERR_QUIT(rwops);\t\t\n\tif (0!=rwops->seek(rwops,-27,RW_SEEK_CUR))\t\t\tRWOP_ERR_QUIT(rwops);\t\t\n\tif (2!=rwops->read(rwops,test_buf,10,3))\t\t\tRWOP_ERR_QUIT(rwops);\t\t\t\t\n\tif (SDL_memcmp(test_buf,\"12345678901234567890\",20))\tRWOP_ERR_QUIT(rwops);\n\trwops->close(rwops);\n\tprintf(\"test4 OK\\n\");\n\n/* test5 : append mode */\n\trwops = SDL_RWFromFile(FBASENAME1,\"ab+\"); /* write + read + append */\t\t\n\tif (!rwops)\t\t\t\t\t\t\t\t\t\t\tRWOP_ERR_QUIT(rwops);\n\tif (1 != rwops->write(rwops,\"1234567890\",10,1) )\tRWOP_ERR_QUIT(rwops);\t\t\n\tif (10 != rwops->write(rwops,\"1234567890\",1,10) )\tRWOP_ERR_QUIT(rwops);\t\t\n\tif (7 != rwops->write(rwops,\"1234567\",1,7) )\t\tRWOP_ERR_QUIT(rwops); \t\n\tif (0!=rwops->seek(rwops,0L,RW_SEEK_SET))\t\t\tRWOP_ERR_QUIT(rwops);\t\t\t\t\t\n\t\n\tif (1!=rwops->read(rwops,test_buf,1,1))\t\t\t\tRWOP_ERR_QUIT(rwops); \n\tif (0!=rwops->seek(rwops,0L,RW_SEEK_SET))\t\t\tRWOP_ERR_QUIT(rwops);\t\t\t\t\t\n\t\n\tif (20+27!=rwops->seek(rwops,-7,RW_SEEK_END))\t\tRWOP_ERR_QUIT(rwops);\t\t\t\t\t\n\tif (7!=rwops->read(rwops,test_buf,1,7))\t\t\t\tRWOP_ERR_QUIT(rwops);\t\t\n\tif (SDL_memcmp(test_buf,\"1234567\",7))\t\t\t\tRWOP_ERR_QUIT(rwops);\t\t\n\tif (0!=rwops->read(rwops,test_buf,1,1))\t\t\t\tRWOP_ERR_QUIT(rwops);\t\t\n\tif (0!=rwops->read(rwops,test_buf,10,100))\t\t\tRWOP_ERR_QUIT(rwops);\t\t\n\t\n\tif (27!=rwops->seek(rwops,-27,RW_SEEK_CUR))\t\t\tRWOP_ERR_QUIT(rwops);\n\t\n\tif (0!=rwops->seek(rwops,0L,RW_SEEK_SET))\t\t\tRWOP_ERR_QUIT(rwops);\n\tif (3!=rwops->read(rwops,test_buf,10,3))\t\t\tRWOP_ERR_QUIT(rwops);\t\t\t\t\n\tif (SDL_memcmp(test_buf,\"123456789012345678901234567123\",30))\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tRWOP_ERR_QUIT(rwops);\n\trwops->close(rwops);\n\tprintf(\"test5 OK\\n\");\n\tcleanup();\n\treturn 0; /* all ok */\n}\n"]}